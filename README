Setting an "arbitrary" (i.e. not represented in the path) default value on a route (:name => value e.g. :layout => 'home') is described on pp 397-398 of the "Defining Routes with map.connect" section of chapter 20.2 "Routing Requests" of "Agile Web Development with Rails" second edition.

An "arbitrary" default value is one whose name does not appear as a tag in the path specification pattern. Here is an example (from routes.rb):

  map.home_index '', :controller => 'home',
    :extra_stuff => 'the_stuff'

This is useful for e.g. dynamically setting the layout based on the route:

  map.home_index '', :controller => 'home',
    :layout => 'home_layout'

And then using the value set in the route, to set the layout on a controller like so:

  layout proc{ |controller| controller.params[:layout]}

In Rails 2.1.0 this sort of route _recognition_ works great. But when a route has "arbitrary" default values, route _generation_ does not work (for that route). In order to get route generation to work for such a route, all the "arbitrary" default values must be specified to the generator. The problem is that these default values are not known and should not be known at the point of the generating call.

This project is a Rails app that illustrates the issue. Run:

rake test

And you'll see the failure. Important files are:

/config/routes.rb
/test/functional/home_test.rb

The first test demonstrates the workaround (of explicitly specifying the "arbitrary" default values to the generate call) and the second test demonstrated the failure.